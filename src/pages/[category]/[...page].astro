---
import { getCollection } from 'astro:content';
import Layout from '../../layouts/Layout.astro';
import PostCard from '../../components/PostCard.astro';
import { MAIN_CATEGORIES, POST_SETTINGS, SITE_INFO, SUBCATEGORIES } from '../../config/site'; // Ajustar ruta
import SubcategorySidebar from '../../components/SubcategorySidebar.astro';
import Breadcrumbs from '../../components/Breadcrumbs.astro';

export const prerender = true;

export interface Props {
  categoryTitle: string;
  page: any;
}

export async function getStaticPaths({ paginate }) {
  const paths = MAIN_CATEGORIES.map(category => ({
    params: { category: category.toLowerCase().replace(/ /g, '-') },
    props: { categoryTitle: category }
  }));

  const paginatedPaths = [];
  for (const { params, props } of paths) {
    const allPosts = await getCollection('blog', ({ data }) => {
      return data.category === props.categoryTitle;
    });

    const sortedPosts = allPosts.sort((a, b) => new Date(b.data.created).getTime() - new Date(a.data.created).getTime());

    const pages = paginate(sortedPosts, {
      pageSize: POST_SETTINGS.postsPerPage,
      params: { category: params.category },
      props: { categoryTitle: props.categoryTitle }
    });
    paginatedPaths.push(...pages);
  }

  return paginatedPaths;
}

const { categoryTitle, page } = Astro.props;

const url = new URL(Astro.request.url);
const langParam = url.searchParams.get('lang');
const currentLang = langParam && SITE_INFO.locales[langParam] ? langParam : SITE_INFO.language;
const currentLocale = SITE_INFO.locales[currentLang];

const categoryToLocaleKeyMap = {
  "Splinterlands": "splinterlands",
  "Hived Blogs": "hivedBlogs",
  "La Web 3.0": "hiveTutorials",
  "Servicios de quigua": "quiguaServices",
  "Test Category": "testCategory"
};

const displayCategory = categoryToLocaleKeyMap[categoryTitle] ? currentLocale[categoryToLocaleKeyMap[categoryTitle]] : categoryTitle;

const breadcrumbs = [
  { label: currentLocale.home, href: `${Astro.url.origin}/?lang=${currentLang}` },
  { label: displayCategory, href: `${Astro.url.origin}/${categoryTitle.toLowerCase().replace(/ /g, '-')}/?lang=${currentLang}` }
];
---

<Layout title={currentLocale.categoryPostsTitle.replace('{category}', categoryTitle)} currentLocale={currentLocale} lang={currentLang}>
  <Fragment slot="breadcrumbs">
    <Breadcrumbs items={breadcrumbs} />
  </Fragment>
    <div class="page-container">
    <main class="main-content">
      <h1>{currentLocale.categoryPostsTitle.replace('{category}', categoryTitle)}</h1>
      <div class="posts-grid">
        {page.data.map(post => (
          <PostCard post={post} />
        ))}
      </div>

      <div class="pagination-nav">
        {page.url.prev && <a href={page.url.prev} class="pagination-link prev">{currentLocale.previous}</a>}
        <span class="pagination-info">{currentLocale.page} {page.currentPage} {currentLocale.of} {page.lastPage}</span>
        {page.url.next && <a href={page.url.next} class="pagination-link next">{currentLocale.next}</a>}
      </div>
    </main>
    <aside class="sidebar-column">
      <SubcategorySidebar category={categoryTitle} />
    </aside>
  </div>
</Layout>