---
import Layout from '../layouts/Layout.astro';
import Hero from '../components/Hero.astro';
import PostCard from '../components/PostCard.astro';
import { SITE_INFO, POST_SETTINGS, MAIN_CATEGORIES } from '../config/site';
import { getCollection } from 'astro:content';
import Breadcrumbs from '../components/Breadcrumbs.astro';

const HIVE_USERNAME = import.meta.env.HIVE_USERNAME;

const url = new URL(Astro.request.url);
const langParam = url.searchParams.get('lang');
const currentLang = langParam && SITE_INFO.locales[langParam] ? langParam : SITE_INFO.language;
const currentLocale = SITE_INFO.locales[currentLang];

const allPosts = await getCollection('blog');

const sortedPosts = allPosts.sort((a, b) => new Date(b.data.created).getTime() - new Date(a.data.created).getTime());

// Limitar el número de posts
const latestPosts = sortedPosts.slice(0, POST_SETTINGS.postsPerPage);

const activeCategories = new Set(allPosts.map(post => post.data.category));

const breadcrumbs = [
  { label: currentLocale.home, href: '/' }
];

const categoryToLocaleKeyMap = {
  "Splinterlands": "splinterlands",
  "Hived Blogs": "hivedBlogs",
  "La Web 3.0": "hiveTutorials",
  "Servicios de quigua": "quiguaServices", // Actualizado para coincidir con MAIN_CATEGORIES
  "Test Category": "testCategory"
};
---
<Layout title={HIVE_USERNAME} description={SITE_INFO.description}>
  <Fragment slot="breadcrumbs">
    <Breadcrumbs items={breadcrumbs} />
  </Fragment>
  <Hero currentLocale={currentLocale} />

  <div class="page-container">
    <main class="main-content">
      <h2>{currentLocale.recentPublications.replace('@quigua', '@' + HIVE_USERNAME)}</h2>
      <div class="posts-grid">
        {latestPosts.map((post) => (
          <PostCard post={post} />
        ))}
      </div>
      {/* Aquí puedes añadir un botón o enlace para ver más posts si tienes muchos */}
    </main>
    <aside class="sidebar-column">
      <h3>{currentLocale.hiveCategories}</h3>
      <nav class="categories-nav">
        <ul>
          {MAIN_CATEGORIES.filter(cat => activeCategories.has(cat)).map(category => {
            const localeKey = categoryToLocaleKeyMap[category];
            const displayCategory = localeKey ? currentLocale[localeKey] : category; // Usa la traducción o el nombre original si no hay mapeo
            const slug = category.toLowerCase().replace(/ /g, '-'); // El slug actual funciona para la URL

            return (
              <li><a href={`${Astro.url.origin}/${slug}/?lang=${currentLang}`}>{displayCategory}</a></li>
            );
          })}
        </ul>
      </nav>
      <div class="other-details-placeholder">
        <h3>Acerca de {HIVE_USERNAME}</h3>
        <p>{SITE_INFO.description}</p>
      </div>
      {/* Podrías añadir un módulo para posts populares o tags aquí */}
    </aside>
  </div>
</Layout>